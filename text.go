// Package text provides a collection of text file extensions
// and a utility function to check if given path is a text file
package text

import (
	"path"
	"strings"
)

var extensions = []string{
	"applescript",
	"asp",
	"aspx",
	"atom",
	"bashrc",
	"bat",
	"bbcolors",
	"bowerrc",
	"c",
	"cc",
	"cfg",
	"cnf",
	"coffee",
	"conf",
	"cpp",
	"cson",
	"css",
	"csslintrc",
	"csv",
	"curlrc",
	"cxx",
	"diff",
	"eco",
	"editorconfig",
	"ejs",
	"emacs",
	"eml",
	"erb",
	"erl",
	"eslintignore",
	"eslintrc",
	"gemrc",
	"gitattributes",
	"gitconfig",
	"gitignore",
	"go",
	"gvimrc",
	"h",
	"haml",
	"hbs",
	"hgignore",
	"hpp",
	"htaccess",
	"htm",
	"html",
	"iced",
	"ini",
	"ino",
	"irbrc",
	"itermcolors",
	"jade",
	"js",
	"jscsrc",
	"jshintignore",
	"jshintrc",
	"json",
	"jsonld",
	"jsx",
	"less",
	"ls",
	"log",
	"m",
	"markdown",
	"md",
	"mdown",
	"mdwn",
	"mht",
	"mhtml",
	"mkd",
	"mkdn",
	"mkdown",
	"npmrc",
	"npmignore",
	"nvmrc",
	"patch",
	"pbxproj",
	"pch",
	"php",
	"phtml",
	"pl",
	"pm",
	"properties",
	"py",
	"rb",
	"rdoc",
	"rdoc_options",
	"ron",
	"rss",
	"rst",
	"rtf",
	"rvmrc",
	"sass",
	"scala",
	"scss",
	"seestyle",
	"sls",
	"sss",
	"sh",
	"strings",
	"styl",
	"stylus",
	"sub",
	"sublime-build",
	"sublime-commands",
	"sublime-completions",
	"sublime-keymap",
	"sublime-macro",
	"sublime-menu",
	"sublime-project",
	"sublime-settings",
	"sublime-workspace",
	"svg",
	"sql",
	"terminal",
	"text",
	"textile",
	"tmLanguage",
	"tmTheme",
	"tsv",
	"txt",
	"vbs",
	"vim",
	"viminfo",
	"vimrc",
	"webapp",
	"xht",
	"xhtml",
	"xml",
	"xsl",
	"yaml",
	"yml",
	"zsh",
	"zshrc",
}

// Extensions is the extensions for different text file types
var Extensions map[string]bool

func init() {
	Extensions = map[string]bool{}
	for _, ext := range extensions {
		Extensions[ext] = true
	}
}

// Is checks if a path is a text file
func Is(p string) bool {
	ext := strings.TrimLeft(path.Ext(p), ".")
	return Extensions[strings.ToLower(ext)]
}
